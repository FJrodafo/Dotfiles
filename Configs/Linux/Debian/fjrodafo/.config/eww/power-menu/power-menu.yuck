;  ╦ ╦┬┌┐┌┌┬┐┌─┐┬ ┬
;  ║║║││││ │││ ││││
;  ╚╩╝┴┘└┘─┴┘└─┘└┴┘

(defwindow power-menu
  ; monitor 0 ; Wayland users may need this
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry :width "100%" :height "100%")
  (power-menu-layout-widget)
)

;  ╔═╗┌─┐┬  ┬
;  ╠═╝│ ││  │
;  ╩  └─┘┴─┘┴─┘

(defpoll power-menu-time-poll :interval "1s" :initial `{"hour": 0, "min": 0}` `date +'{"hour":"%H","min":"%M"}'`)
(defpoll power-menu-airplane-status-poll :interval "1s" :initial "" `nmcli radio wifi`)
(defpoll power-menu-wifi-status-poll :interval "1s" :initial "" `nmcli -t -f SIGNAL,ACTIVE device wifi | awk -F':' '{if($2=="yes")print$1}'`)
(defpoll power-menu-battery-status-poll :interval "1s" :initial 0 "cat /sys/class/power_supply/BAT0/status || echo 0")
(defpoll power-menu-battery-capacity-poll :interval "1s" :initial 0 "cat /sys/class/power_supply/BAT0/capacity || echo 0")

;  ╦ ╦┬┌┬┐┌─┐┌─┐┌┬┐
;  ║║║│ │││ ┬├┤  │
;  ╚╩╝┴─┴┘└─┘└─┘ ┴

(defwidget power-menu-layout-widget []
  (box :class "power-menu-layout-box" :orientation "vertical" :space-evenly false
    (box :valign "start" :space-evenly false :spacing 25
      (power-menu-sundial)
      (power-menu-wifi
        :airplane-mode power-menu-airplane-status-poll :airplane-icon "󰀝"
        :wifi-strength power-menu-wifi-status-poll :wifi-offline "󰤮" :wifi-slow "󰤟" :wifi-okay "󰤢" :wifi-good "󰤥" :wifi-excellent "󰤨"
      )
      (power-menu-battery
        :status power-menu-battery-status-poll :charging "󰂄" :no-battery "󱉞"
        :capacity power-menu-battery-capacity-poll :empty "󰂎" :bat10 "󰁺" :bat20 "󰁻" :bat30 "󰁼" :bat40 "󰁽" :bat50 "󰁾" :bat60 "󰁿" :bat70 "󰂀" :bat80 "󰂁" :bat90 "󰂂" :bat100 "󰁹"
      )
      (label :class "power-menu-separator-label" :text "|")
      (eventbox :cursor "pointer"
        (button :class "power-menu-close-button" :onclick "~/.eww/target/release/eww close power-menu" "")
      )
    )
    (box :vexpand true :hexpand true :space-evenly false
      (box :class "power-menu-time-box" :valign "end" :halign "start" :space-evenly false :spacing 15
        (label :text "󰣉")
        (label :text "${power-menu-time-poll.hour}:${power-menu-time-poll.min}")
      )
      (power-menu-buttons
        :shutdown "systemctl poweroff" :shutdown-icon "󰐥" ; :shutdown-icon "󰤆"
        :reboot "systemctl reboot" :reboot-icon "󰜉" ; :reboot-icon ""
        :suspend "systemctl suspend" :suspend-icon "󰤄" ; :suspend-icon "󰤄"
        :lock "loginctl kill-session self" :lock-icon "󱅞" ; :lock-icon "󰗼"
      )
    )
  )
)
(defwidget power-menu-sundial []
  (label :class "power-menu-sundial-label" :halign "end" :hexpand true :text {
    (power-menu-time-poll.hour >= 21) ? "Night" :
    (power-menu-time-poll.hour >= 20) || (power-menu-time-poll.hour == 19 && power-menu-time-poll.min >= 30) ? "Evening" :
    (power-menu-time-poll.hour == 19 && power-menu-time-poll.min < 30) || (power-menu-time-poll.hour == 18 && power-menu-time-poll.min >= 30) ? "Dusk" :
    (power-menu-time-poll.hour == 18 && power-menu-time-poll.min < 30) || (power-menu-time-poll.hour >= 16) ? "Late Afternoon" :
    (power-menu-time-poll.hour >= 13) ? "Afternoon" :
    (power-menu-time-poll.hour == 12) ? "Midday" :
    (power-menu-time-poll.hour >= 10) ? "Late Morning" :
    (power-menu-time-poll.hour >= 8) || (power-menu-time-poll.hour == 7 && power-menu-time-poll.min >= 30) ? "Morning" :
    (power-menu-time-poll.hour == 7 && power-menu-time-poll.min < 30) || (power-menu-time-poll.hour == 6 && power-menu-time-poll.min >= 30) ? "Dawn" :
    (power-menu-time-poll.hour == 6 && power-menu-time-poll.min < 30) || (power-menu-time-poll.hour >= 4) ? "Early Morning" :
    (power-menu-time-poll.hour >= 1) ? "Night" :
    (power-menu-time-poll.hour == 0) ? "Midnight" : "Unknown Time"
  })
)
(defwidget power-menu-wifi [airplane-mode airplane-icon wifi-strength wifi-offline wifi-slow wifi-okay wifi-good wifi-excellent]
  (box :class "power-menu-wifi-box" :space-evenly false :spacing 8
    (label :text {
      (airplane-mode == "disabled") ? airplane-icon :
      (wifi-strength == "") ? wifi-offline :
      (wifi-strength < 26) ? wifi-slow :
      (wifi-strength < 51) ? wifi-okay :
      (wifi-strength < 76) ? wifi-good : wifi-excellent
    })
  )
)
(defwidget power-menu-battery [status charging no-battery capacity empty bat10 bat20 bat30 bat40 bat50 bat60 bat70 bat80 bat90 bat100]
  (box :class "power-menu-battery-box" :space-evenly false :spacing 8
    (label :text {
      (status == 0 && capacity == 0) ? no-battery :
      (status == 'Charging') ? charging :
      (capacity < 9) ? empty :
      (capacity < 17) ? bat10 :
      (capacity < 25) ? bat20 :
      (capacity < 33) ? bat30 :
      (capacity < 41) ? bat40 :
      (capacity < 51) ? bat50 :
      (capacity < 61) ? bat60 :
      (capacity < 71) ? bat70 :
      (capacity < 81) ? bat80 :
      (capacity < 91) ? bat90 : bat100
    })
  )
)
(defwidget power-menu-buttons [shutdown shutdown-icon reboot reboot-icon suspend suspend-icon lock lock-icon]
  (box :valign "end" :halign "end" :vexpand true :hexpand true :space-evenly false :spacing 7
    (eventbox :class "power-menu-button-box power-menu-shutdown-button-box" :cursor "pointer"
      (button :onclick shutdown shutdown-icon)
    )
    (eventbox :class "power-menu-button-box power-menu-reboot-button-box" :cursor "pointer"
      (button :onclick reboot reboot-icon)
    )
    (eventbox :class "power-menu-button-box power-menu-suspend-button-box" :cursor "pointer"
      (button :onclick suspend suspend-icon)
    )
    (eventbox :class "power-menu-button-box power-menu-lock-button-box" :cursor "pointer"
      (button :onclick lock lock-icon)
    )
  )
)
